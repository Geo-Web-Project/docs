"use strict";(self.webpackChunkgeo_web_docs=self.webpackChunkgeo_web_docs||[]).push([[8183],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,g=u["".concat(d,".").concat(m)]||u[m]||p[m]||i;return n?r.createElement(g,o(o({ref:t},s),{},{components:n})):r.createElement(g,o({ref:t},s))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},656:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const i={description:"Documentation of the LibGeoWebCoordinateV2 contract"},o="Coordinates",l={unversionedId:"developers/core-contracts/registrydiamond/geowebparcelfacet/geo-web-coordinates",id:"developers/core-contracts/registrydiamond/geowebparcelfacet/geo-web-coordinates",title:"Coordinates",description:"Documentation of the LibGeoWebCoordinateV2 contract",source:"@site/docs/005-developers/002-core-contracts/002-registrydiamond/geowebparcelfacet/geo-web-coordinates.md",sourceDirName:"005-developers/002-core-contracts/002-registrydiamond/geowebparcelfacet",slug:"/developers/core-contracts/registrydiamond/geowebparcelfacet/geo-web-coordinates",permalink:"/developers/core-contracts/registrydiamond/geowebparcelfacet/geo-web-coordinates",draft:!1,tags:[],version:"current",frontMatter:{description:"Documentation of the LibGeoWebCoordinateV2 contract"},sidebar:"developersSidebar",previous:{title:"GeoWebParcelFacet",permalink:"/developers/core-contracts/registrydiamond/geowebparcelfacet/"},next:{title:"PCOLicenseClaimerFacet",permalink:"/developers/core-contracts/registrydiamond/pcolicenseclaimerfacet"}},d={},c=[{value:"Summary",id:"summary",level:3},{value:"Code",id:"code",level:3},{value:"Contract Functions",id:"contract-functions",level:2},{value:"LibGeoWebCoordinateV2",id:"libgeowebcoordinatev2",level:3},{value:"MAX_X",id:"max_x",level:4},{value:"MAX_Y",id:"max_y",level:4},{value:"traverse",id:"traverse",level:4},{value:"_traverse",id:"_traverse",level:4},{value:"_getX",id:"_getx",level:4},{value:"_getY",id:"_gety",level:4},{value:"toWordIndex",id:"towordindex",level:4},{value:"_toWordIndex",id:"_towordindex",level:4}],s={toc:c},u="wrapper";function p(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,r.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"coordinates"},"Coordinates"),(0,a.kt)("h3",{id:"summary"},"Summary"),(0,a.kt)("p",null,"The Geo Web Coordinate library defines the Geo Web's fixed global grid and coordinate system. It is the basis for the spatial definition of all ",(0,a.kt)("a",{parentName:"p",href:"../../../../concepts/digital-land"},"Geo Web land parcels"),"."),(0,a.kt)("p",null,"The system's grid lines create rectangular areas referred to as Geo Web Coordinates. Each of these Coordinates is uniquely identified and stored with an EVM-optimized method as 1 bit (0=available, 1=claimed). This provides a scalable, on-chain way to ensure that no two parcels overlap (i.e. all Coordinates in a new claim are unclaimed) even as the number of claimed parcels grows into the millions."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"A single Geo Web Coordinate (yellow rectangle) on testnet",src:n(3440).Z,width:"2978",height:"1760"})),(0,a.kt)("p",null,"In the testnet implementation, a larger grid size was used for more practical large land claims. Mainnet uses a smaller grid size that balances transaction fees/size with enabling faithful representation of existing physical-world property lines (","~","20m$$^2$$ around the equator). This grid may be further divided for more precision or migrated to a system that allows arbitrary polygon definition at a later date."),(0,a.kt)("h3",{id:"code"},"Code"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/registry/libraries/LibGeoWebCoordinate.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"LibGeoWebCoordinate.sol"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/registry/libraries/LibGeoWebParcelV2.sol"},(0,a.kt)("inlineCode",{parentName:"a"},"LibGeoWebCoordinateV2.sol"))),(0,a.kt)("h2",{id:"contract-functions"},"Contract Functions"),(0,a.kt)("h3",{id:"libgeowebcoordinatev2"},"LibGeoWebCoordinateV2"),(0,a.kt)("h4",{id:"max_x"},"MAX_X"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"uint64 MAX_X\n")),(0,a.kt)("h4",{id:"max_y"},"MAX_Y"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"uint64 MAX_Y\n")),(0,a.kt)("h4",{id:"traverse"},"traverse"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function traverse(uint64 origin, uint256 direction, uint256 iX, uint256 iY, uint256 i) external pure returns (uint64, uint256, uint256, uint256)\n")),(0,a.kt)("p",null,"Traverse a single direction"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Parameters")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"origin"),(0,a.kt)("td",{parentName:"tr",align:null},"uint64"),(0,a.kt)("td",{parentName:"tr",align:null},"The origin coordinate to start from")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"direction"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null},"The direction to take")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"iX"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"iY"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"i"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Return Values")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[","0]"),(0,a.kt)("td",{parentName:"tr",align:null},"uint64"),(0,a.kt)("td",{parentName:"tr",align:null},"destination The destination coordinate")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[","1]"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[","2]"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"[","3]"),(0,a.kt)("td",{parentName:"tr",align:null},"uint256"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h4",{id:"_traverse"},"_","traverse"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _traverse(uint64 origin, uint256 direction, uint256 iX, uint256 iY, uint256 i) internal pure returns (uint64, uint256, uint256, uint256)\n")),(0,a.kt)("h4",{id:"_getx"},"_","getX"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getX(uint64 coord) internal pure returns (uint64 coordX)\n")),(0,a.kt)("p",null,"Get the X coordinate"),(0,a.kt)("h4",{id:"_gety"},"_","getY"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getY(uint64 coord) internal pure returns (uint64 coordY)\n")),(0,a.kt)("p",null,"Get the Y coordinate"),(0,a.kt)("h4",{id:"towordindex"},"toWordIndex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function toWordIndex(uint64 coord) external pure returns (uint256 iX, uint256 iY, uint256 i)\n")),(0,a.kt)("p",null,"Convert coordinate to word index"),(0,a.kt)("h4",{id:"_towordindex"},"_","toWordIndex"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"function _toWordIndex(uint64 coord) internal pure returns (uint256 iX, uint256 iY, uint256 i)\n")))}p.isMDXComponent=!0},3440:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/geo-web-coordinate-056125b188b67de107e09e39a33119a8.png"}}]);