"use strict";(self.webpackChunkgeo_web_docs=self.webpackChunkgeo_web_docs||[]).push([[4260],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),d=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=d(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(a),m=r,k=p["".concat(c,".").concat(m)]||p[m]||u[m]||i;return a?n.createElement(k,l(l({ref:t},s),{},{components:a})):n.createElement(k,l({ref:t},s))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},9778:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const i={description:"Documentation for the CFABasePCOFacet contract."},l="CFABasePCOFacet",o={unversionedId:"developers/core-contracts/beacondiamond/cfabasepcofacet",id:"developers/core-contracts/beacondiamond/cfabasepcofacet",title:"CFABasePCOFacet",description:"Documentation for the CFABasePCOFacet contract.",source:"@site/docs/005-developers/002-core-contracts/004-beacondiamond/cfabasepcofacet.md",sourceDirName:"005-developers/002-core-contracts/004-beacondiamond",slug:"/developers/core-contracts/beacondiamond/cfabasepcofacet",permalink:"/developers/core-contracts/beacondiamond/cfabasepcofacet",draft:!1,tags:[],version:"current",frontMatter:{description:"Documentation for the CFABasePCOFacet contract."},sidebar:"developersSidebar",previous:{title:"BeaconDiamond",permalink:"/developers/core-contracts/beacondiamond/"},next:{title:"CFAPenaltyBidFacet",permalink:"/developers/core-contracts/beacondiamond/cfapenaltybidfacet"}},c={},d=[{value:"Summary",id:"summary",level:2},{value:"Code",id:"code",level:2},{value:"Contract Functions",id:"contract-functions",level:2},{value:"CFABasePCOFacet",id:"cfabasepcofacet-1",level:3},{value:"PayerContributionRateUpdated",id:"payercontributionrateupdated",level:4},{value:"initializeBid",id:"initializebid",level:4},{value:"payer",id:"payer",level:4},{value:"contributionRate",id:"contributionrate",level:4},{value:"forSalePrice",id:"forsaleprice",level:4},{value:"licenseId",id:"licenseid",level:4},{value:"license",id:"license",level:4},{value:"isPayerBidActive",id:"ispayerbidactive",level:4},{value:"currentBid",id:"currentbid",level:4},{value:"LibCFABasePCO",id:"libcfabasepco",level:3},{value:"STORAGE_POSITION",id:"storage_position",level:4},{value:"STORAGE_POSITION_CUR_BID",id:"storage_position_cur_bid",level:4},{value:"STORAGE_POSITION_CFA",id:"storage_position_cfa",level:4},{value:"Bid",id:"bid",level:4},{value:"DiamondStorage",id:"diamondstorage",level:4},{value:"DiamondCFAStorage",id:"diamondcfastorage",level:4},{value:"PayerContributionRateUpdated",id:"payercontributionrateupdated-1",level:4},{value:"PayerForSalePriceUpdated",id:"payerforsalepriceupdated",level:4},{value:"diamondStorage",id:"diamondstorage-1",level:4},{value:"_currentBid",id:"_currentbid",level:4},{value:"cfaStorage",id:"cfastorage",level:4},{value:"_getBeneficiary",id:"_getbeneficiary",level:4},{value:"_checkForSalePrice",id:"_checkforsaleprice",level:4},{value:"_contributionRate",id:"_contributionrate",level:4},{value:"_isPayerBidActive",id:"_ispayerbidactive",level:4},{value:"_createBeneficiaryFlow",id:"_createbeneficiaryflow",level:4},{value:"_editBid",id:"_editbid",level:4},{value:"IBasePCO",id:"ibasepco",level:3},{value:"PayerForSalePriceUpdated",id:"payerforsalepriceupdated-1",level:4},{value:"payer",id:"payer-1",level:4},{value:"forSalePrice",id:"forsaleprice-1",level:4},{value:"licenseId",id:"licenseid-1",level:4},{value:"license",id:"license-1",level:4},{value:"ICFABiddable",id:"icfabiddable",level:3},{value:"BidPlaced",id:"bidplaced",level:4},{value:"editBid",id:"editbid",level:4},{value:"placeBid",id:"placebid",level:4}],s={toc:d},p="wrapper";function u(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cfabasepcofacet"},"CFABasePCOFacet"),(0,r.kt)("h2",{id:"summary"},"Summary"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"CFABasePCOFacet")," implements the functions required for the current licensor of a parcel to manage their ",(0,r.kt)("inlineCode",{parentName:"p"},"For Sale Price,"),"corresponding network fee stream, and required buffer deposit according to the ",(0,r.kt)("a",{parentName:"p",href:"../../../concepts/partial-common-ownership"},"PCO market")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.superfluid.finance/superfluid/developers/constant-flow-agreement-cfa"},"Superfluid")," requirements."),(0,r.kt)("h2",{id:"code"},"Code"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/pco-license/facets/CFABasePCOFacet.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"CFABasePCOFacet.sol"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/pco-license/libraries/LibCFABasePCO.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"LibCFABasePCO.sol"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/pco-license/interfaces/IBasePCO.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"IBasePCO.sol"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/Geo-Web-Project/core-contracts/blob/main/contracts/pco-license/interfaces/ICFABiddable.sol"},(0,r.kt)("inlineCode",{parentName:"a"},"ICFABiddable.sol"))),(0,r.kt)("h2",{id:"contract-functions"},"Contract Functions"),(0,r.kt)("h3",{id:"cfabasepcofacet-1"},"CFABasePCOFacet"),(0,r.kt)("p",null,"Handles basic PCO functionality using Constant Flow Agreement (CFA)"),(0,r.kt)("h4",{id:"payercontributionrateupdated"},"PayerContributionRateUpdated"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event PayerContributionRateUpdated(address _payer, int96 contributionRate)\n")),(0,r.kt)("p",null,"Emitted when an owner bid is updated"),(0,r.kt)("h4",{id:"initializebid"},"initializeBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function initializeBid(contract ICFABeneficiary beneficiary, contract IPCOLicenseParamsStore paramsStore, contract IERC721 initLicense, uint256 initLicenseId, address bidder, int96 newContributionRate, uint256 newForSalePrice) external\n")),(0,r.kt)("p",null,"Initialize bid. - Must be the contract owner - Must have payment token buffer deposited - Must have permissions to create flow for bidder"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"beneficiary"),(0,r.kt)("td",{parentName:"tr",align:null},"contract ICFABeneficiary"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"paramsStore"),(0,r.kt)("td",{parentName:"tr",align:null},"contract IPCOLicenseParamsStore"),(0,r.kt)("td",{parentName:"tr",align:null},"Global store for parameters")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"initLicense"),(0,r.kt)("td",{parentName:"tr",align:null},"contract IERC721"),(0,r.kt)("td",{parentName:"tr",align:null},"Underlying ERC721 license")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"initLicenseId"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Token ID of license")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bidder"),(0,r.kt)("td",{parentName:"tr",align:null},"address"),(0,r.kt)("td",{parentName:"tr",align:null},"Initial bidder")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newContributionRate"),(0,r.kt)("td",{parentName:"tr",align:null},"int96"),(0,r.kt)("td",{parentName:"tr",align:null},"New contribution rate for bid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newForSalePrice"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Intented new for sale price. Must be within rounding bounds of newContributionRate")))),(0,r.kt)("h4",{id:"payer"},"payer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function payer() external view returns (address)\n")),(0,r.kt)("p",null,"Current payer of license"),(0,r.kt)("h4",{id:"contributionrate"},"contributionRate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function contributionRate() external view returns (int96)\n")),(0,r.kt)("p",null,"Current contribution rate of payer"),(0,r.kt)("h4",{id:"forsaleprice"},"forSalePrice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function forSalePrice() external view returns (uint256)\n")),(0,r.kt)("p",null,"Current price needed to purchase license"),(0,r.kt)("h4",{id:"licenseid"},"licenseId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function licenseId() external view returns (uint256)\n")),(0,r.kt)("p",null,"License Id"),(0,r.kt)("h4",{id:"license"},"license"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function license() external view returns (contract IERC721)\n")),(0,r.kt)("p",null,"License"),(0,r.kt)("h4",{id:"ispayerbidactive"},"isPayerBidActive"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function isPayerBidActive() external view returns (bool)\n")),(0,r.kt)("p",null,"Is current bid actively being paid"),(0,r.kt)("h4",{id:"currentbid"},"currentBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function currentBid() external pure returns (struct LibCFABasePCO.Bid)\n")),(0,r.kt)("p",null,"Get current bid"),(0,r.kt)("h3",{id:"libcfabasepco"},"LibCFABasePCO"),(0,r.kt)("h4",{id:"storage_position"},"STORAGE_POSITION"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 STORAGE_POSITION\n")),(0,r.kt)("h4",{id:"storage_position_cur_bid"},"STORAGE_POSITION_CUR_BID"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 STORAGE_POSITION_CUR_BID\n")),(0,r.kt)("h4",{id:"storage_position_cfa"},"STORAGE_POSITION_CFA"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"bytes32 STORAGE_POSITION_CFA\n")),(0,r.kt)("h4",{id:"bid"},"Bid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct Bid {\n  uint256 timestamp;\n  address bidder;\n  int96 contributionRate;\n  uint256 perSecondFeeNumerator;\n  uint256 perSecondFeeDenominator;\n  uint256 forSalePrice;\n}\n")),(0,r.kt)("h4",{id:"diamondstorage"},"DiamondStorage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DiamondStorage {\n  contract IPCOLicenseParamsStore paramsStore;\n  contract IERC721 license;\n  uint256 licenseId;\n  contract ICFABeneficiary beneficiary;\n}\n")),(0,r.kt)("h4",{id:"diamondcfastorage"},"DiamondCFAStorage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"struct DiamondCFAStorage {\n  struct CFAv1Library.InitData cfaV1;\n}\n")),(0,r.kt)("h4",{id:"payercontributionrateupdated-1"},"PayerContributionRateUpdated"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event PayerContributionRateUpdated(address _payer, int96 contributionRate)\n")),(0,r.kt)("p",null,"Emitted when an owner bid is updated"),(0,r.kt)("h4",{id:"payerforsalepriceupdated"},"PayerForSalePriceUpdated"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event PayerForSalePriceUpdated(address _payer, uint256 forSalePrice)\n")),(0,r.kt)("p",null,"Emitted when for sale price is updated"),(0,r.kt)("h4",{id:"diamondstorage-1"},"diamondStorage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function diamondStorage() internal pure returns (struct LibCFABasePCO.DiamondStorage ds)\n")),(0,r.kt)("h4",{id:"_currentbid"},"_","currentBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _currentBid() internal pure returns (struct LibCFABasePCO.Bid bid)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Store currentBid in separate position so struct is upgradeable")),(0,r.kt)("h4",{id:"cfastorage"},"cfaStorage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function cfaStorage() internal pure returns (struct LibCFABasePCO.DiamondCFAStorage ds)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Store cfa in separate position so struct is upgradeable")),(0,r.kt)("h4",{id:"_getbeneficiary"},"_","getBeneficiary"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _getBeneficiary() internal view returns (address)\n")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Get beneficiary or default if not set")),(0,r.kt)("h4",{id:"_checkforsaleprice"},"_","checkForSalePrice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _checkForSalePrice(uint256 forSalePrice, int96 contributionRate, uint256 _perSecondFeeNumerator, uint256 _perSecondFeeDenominator) internal pure returns (bool)\n")),(0,r.kt)("h4",{id:"_contributionrate"},"_","contributionRate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _contributionRate() internal view returns (int96)\n")),(0,r.kt)("h4",{id:"_ispayerbidactive"},"_","isPayerBidActive"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _isPayerBidActive() internal view returns (bool)\n")),(0,r.kt)("h4",{id:"_createbeneficiaryflow"},"_","createBeneficiaryFlow"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _createBeneficiaryFlow(int96 newContributionRate) internal\n")),(0,r.kt)("h4",{id:"_editbid"},"_","editBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function _editBid(int96 newContributionRate, uint256 newForSalePrice) internal\n")),(0,r.kt)("h3",{id:"ibasepco"},"IBasePCO"),(0,r.kt)("h4",{id:"payerforsalepriceupdated-1"},"PayerForSalePriceUpdated"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event PayerForSalePriceUpdated(address _payer, uint256 forSalePrice)\n")),(0,r.kt)("p",null,"Emitted when for sale price is updated"),(0,r.kt)("h4",{id:"payer-1"},"payer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function payer() external view returns (address)\n")),(0,r.kt)("p",null,"Current payer of license"),(0,r.kt)("h4",{id:"forsaleprice-1"},"forSalePrice"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function forSalePrice() external view returns (uint256)\n")),(0,r.kt)("p",null,"Current for sale price of license"),(0,r.kt)("h4",{id:"licenseid-1"},"licenseId"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function licenseId() external view returns (uint256)\n")),(0,r.kt)("p",null,"License Id"),(0,r.kt)("h4",{id:"license-1"},"license"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function license() external view returns (contract IERC721)\n")),(0,r.kt)("p",null,"License"),(0,r.kt)("h3",{id:"icfabiddable"},"ICFABiddable"),(0,r.kt)("h4",{id:"bidplaced"},"BidPlaced"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event BidPlaced(address _bidder, int96 contributionRate, uint256 forSalePrice)\n")),(0,r.kt)("p",null,"Emitted when for sale price is updated"),(0,r.kt)("h4",{id:"editbid"},"editBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function editBid(int96 newContributionRate, uint256 newForSalePrice) external\n")),(0,r.kt)("p",null,"Edit bid"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newContributionRate"),(0,r.kt)("td",{parentName:"tr",align:null},"int96"),(0,r.kt)("td",{parentName:"tr",align:null},"New contribution rate for bid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newForSalePrice"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Intented new for sale price. Must be within rounding bounds of newContributionRate")))),(0,r.kt)("h4",{id:"placebid"},"placeBid"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function placeBid(int96 newContributionRate, uint256 newForSalePrice) external\n")),(0,r.kt)("p",null,"Place a bid to purchase license as msg.sender"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newContributionRate"),(0,r.kt)("td",{parentName:"tr",align:null},"int96"),(0,r.kt)("td",{parentName:"tr",align:null},"New contribution rate for bid")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"newForSalePrice"),(0,r.kt)("td",{parentName:"tr",align:null},"uint256"),(0,r.kt)("td",{parentName:"tr",align:null},"Intented new for sale price. Must be within rounding bounds of newContributionRate")))))}u.isMDXComponent=!0}}]);